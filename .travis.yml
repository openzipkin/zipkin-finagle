# Run `travis lint` when changing this file to avoid breaking the build.

# See https://docs.travis-ci.com/user/reference/overview/#for-a-particular-travisyml-configuration
arch: amd64           # Use default architecture
virt: lxd             # LXD containers where possible as they boot much faster than full VMs
os: linux             # required for arch different than amd64
dist: focal           # newest available distribution

# license-maven-plugin needs the full history to generate copyright year range. Ex. 2013-2020
# Don't do a shallow clone, as it interferes with this.
git:
  depth: false

# Re-use JDK 11 from focal release instead of delaying build with installation
language: java

cache:
  directories:
    - $HOME/.m2

# use a go-offline that properly works with multi-module builds
install: ./mvnw --batch-mode de.qaware.maven:go-offline-maven-plugin:resolve-dependencies

# Add deployment jobs. Note: "branch = master" for PRs, this is the base branch name.
#
# See https://docs.travis-ci.com/user/conditional-builds-stages-jobs#conditional-stages
#     https://github.com/travis-ci/travis-conditions/
jobs:
  include:
    - stage: test
      # We run tests on non-tagged pushes to master that aren't commit made by the release plugin
      # We also run tests on pull requests targeted at the master branch.
      if: |
          branch = master AND tag IS blank AND \
          commit_message !~ /maven-release-plugin/ AND \
          type IN (push, pull_request)
      name: "Run unit and integration tests"
      script: ./mvnw verify -nsu || travis_terminate 1
    - stage: deploy
      # If we are on master, deploy a SNAPSHOT (unless this is a commit made by the release plugin)
      # If we are on a version tag, deploy it to Sonatype (automatically releases to Maven Central)
      if: |
          ( ( branch = master AND tag IS blank AND commit_message !~ /maven-release-plugin/ ) OR
              tag =~ ^[0-9]+\.[0-9]+\.[0-9]+ ) AND \
          type = push AND env(SONATYPE_USER) IS present
      name: "Deploy a SNAPSHOT or release to Sonatype"
      script:
        # Setup GPG to sign the artifacts uploaded to Sonatype
        - |
          # ensure GPG commands work non-interactively
          export GPG_TTY=$(tty)
          # import signing key used for jar files
          echo ${GPG_SIGNING_KEY} | base64 --decode | gpg --batch --passphrase ${GPG_PASSPHRASE} --import || travis_terminate 1
        # Perform the deployment: travis_wait ensures upload delays don't kill the deployment
        - |
          mvn_deploy="./mvnw --batch-mode -s ./.settings.xml -Prelease -nsu -DskipTests"
          ${mvn_deploy} deploy || travis_terminate 1
          find . -type f -name pom.xml -exec sed -i 's/_2.12/_2.13/g' {} \; || travis_terminate 1
          ${mvn_deploy} deploy
    # Create a release version when a release trigger and credentials needed for git are available
    - stage: create release
      if: |
          tag =~ ^release-[0-9]+\.[0-9]+\.[0-9]+ AND \
          type = push AND env(GH_TOKEN) IS present
      name: "Create release version"
      script:
        # Configure git as release implies pushing commits and tags
        - |
          # Allocate commits to CI, not the owner of the deploy key
          git config user.name "zipkinci"
          git config user.email "zipkinci+zipkin-dev@googlegroups.com"

          # Setup https authentication credentials, used by ./mvnw release:prepare
          git config credential.helper "store --file=.git/credentials"
          echo "https://$GH_TOKEN:@github.com" > .git/credentials || travis_terminate 1
        # Checkout master, as we release from master, not a tag ref
        - git checkout -B master || travis_terminate 1
        # Ensure no one pushed commits since this release tag as it would fail later commands
        - |
          git fetch origin master:origin/master || travis_terminate 1
          commit_local_master=$(git show --pretty='format:%H' master) || travis_terminate 1
          commit_remote_master=$(git show --pretty='format:%H' origin/master) || travis_terminate 1
          if [ "$commit_local_master" != "$commit_remote_master" ]; then
            echo "Master on remote 'origin' has commits since the version under release, aborting"
            travis_terminate 1
          fi
        # Get the release version from the trigger tag, then delete it.
        - |
          release_version=$(echo "${TRAVIS_TAG}" | sed 's/^release-//') || travis_terminate 1
          git push origin :"${TRAVIS_TAG}"
        # Prepare and push release commits and the version tag (N.N.N), which triggers deployment.
        - ./mvnw --batch-mode -nsu -DreleaseVersion=${release_version} -Darguments=-DskipTests release:prepare

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/ead3c37d57527214e9f2
      - https://webhooks.gitter.im/e/9f1ee2f315d32956f8d6
    on_success: change
    on_failure: always

# Secure variables needed for release and publication
#
# When Travis, add to https://travis-ci.org/github/openzipkin/${REPO}/settings
#
# GH_TOKEN=XXX-https://github.com/settings/tokens-XXX
#   - makes release commits and tags, also writes to GHCR if Docker
#   - needs repo:status, public_repo and if Docker write:packages, delete:packages
#   - referenced in .settings.xml
#   - store like this: echo "https://$GH_TOKEN:@github.com" > .git/credentials
# GPG_SIGNING_KEY=$(gpg -a --export-secret-keys zipkin-admin@googlegroups.com |base64)
#   - used to sign jars in release commands
#   - sent to keyserver.ubuntu.com
#   - import like this: echo ${GPG_SIGNING_KEY} | base64 --decode | gpg --batch --passphrase ${GPG_PASSPHRASE} --import
# GPG_PASSPHRASE=passphrase_for_GPG_SIGNING_KEY
#   - referenced in .settings.xml
# SONATYPE_USER=your_sonatype_account_token
#   - used to publish to Maven Central via https://oss.sonatype.org/#stagingRepositories
#   - needs access to io.zipkin via https://issues.sonatype.org/browse/OSSRH-16669
#   - generate via https://oss.sonatype.org/#profile;User%20Token
#   - referenced in .settings.xml
# SONATYPE_PASSWORD=password_to_SONATYPE_USER
#   - referenced in .settings.xml
